from aiogram import Router
from aiogram.types import CallbackQuery, Message
from aiogram.filters import Text

from filters.member_filters import IsStatus
from keyboards.reply_member import menu_member_kb
from keyboards.reply_without_status import menu_withaut_status_kb
from keyboards.inline_user import okay_kb
from db.users import read_status_member, read_name, read_donations
from lexicon.user_lexicon import USER_LEXICON

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª —Ä–æ—É—Ç–µ—Ä –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –º–æ–¥—É–ª—è
router: Router = Router()

file_id = [
    'AgACAgIAAxkDAAIElGSv9ME7laADL8wTKuQFqrSZS'
    'hhHAALSyTEbTmBgSWiUvIVKpFmsAQADAgADeAADLwQ'
]

status_member_list: list[str] = ['–ë–µ–∑ —Å—Ç–∞—Ç—É—Å–∞', '–õ–∞–π—Ç', '–°—Ç–∞–Ω–¥–∞—Ä—Ç', '–ú–∞–∫—Å']

router.message.filter(IsStatus(status_member_list))


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ Callback
# —Å data 'okay_but_pressed'
@router.callback_query(Text(text='okay_but_pressed'))
async def show_menu_2(callback: CallbackQuery):
    status = await read_status_member(callback.from_user.id)
    name = await read_name(callback.from_user.id)
    if status == '–ë–µ–∑ —Å—Ç–∞—Ç—É—Å–∞':
        await callback.message.answer_photo(photo=file_id[0],
                                            caption=f'–ü—Ä–∏–≤–µ—Ç, {name}üëã\n\n'
                                            '–°–∞–π—á–∞—Å —É —Ç–µ–±—è –Ω–µ—Ç —Å—Ç–∞—Ç—É—Å–∞.'
                                            ' –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–∏–Ω–∏–º–∞–ª–Ω—å–æ–≥–æ'
                                            ' —Å—Ç–∞—Ç—É—Å–∞ —Ç—ã –¥–æ–ª–∂–µ–Ω –∑–∞–¥–æ–Ω–∞—Ç–∏—Ç—å'
                                            ' –æ—Ç 1000 —Ä—É–±–ª–µ–π –≤ –º–µ—Å—è—Ü'
                                            f'{USER_LEXICON["greetings"]}',
                                            reply_markup=menu_withaut_status_kb)
    elif status == '–õ–∞–π—Ç':
        await callback.message.answer_photo(photo=file_id[0],
                                            caption=f'–ü—Ä–∏–≤–µ—Ç, {name}üëã\n\n'
                                            '–°–µ–π—á–∞—Å —Ç–≤–æ–π —É—Ä–æ–≤–µ–Ω—å: –õ–∞–π—Ç\n\n'
                                            f'{USER_LEXICON["greetings"]}',
                                            reply_markup=menu_member_kb)
    elif status == '–°—Ç–∞–Ω–¥–∞—Ä—Ç':
        await callback.message.answer_photo(photo=file_id[0],
                                            caption=f'–ü—Ä–∏–≤–µ—Ç, {name}üëã\n\n'
                                            '–°–µ–π—á–∞—Å —Ç–≤–æ–π —É—Ä–æ–≤–µ–Ω—å: –°—Ç–∞–Ω–¥–∞—Ä—Ç\n\n'
                                            f'{USER_LEXICON["greetings"]}',
                                            reply_markup=menu_member_kb)
    elif status == '–ú–∞–∫—Å':
        await callback.message.answer_photo(photo=file_id[0],
                                            caption=f'–ü—Ä–∏–≤–µ—Ç, {name}üëã\n\n'
                                            '–°–µ–π—á–∞—Å —Ç–≤–æ–π —É—Ä–æ–≤–µ–Ω—å: –ú–∞–∫—Å\n\n'
                                            f'{USER_LEXICON["greetings"]}',
                                            reply_markup=menu_member_kb)


@router.message(Text(text='üëë–°—Ç–∞—Ç—É—Å'))
async def show_status(message: Message):
    status = await read_status_member(message.from_user.id)
    money = await read_donations(message.from_user.id)
    if status == '–õ–∞–π—Ç':
        await message.answer('–¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å - –õ–ê–ô–¢\n\n'
                             f'–¢—ã —É–∂–µ –∑–∞–¥–æ–Ω–∞—Ç–∏–ª {money} —Ä—É–±–ª–µ–π'
                             '–Ω–∞ YY —Å–±–æ—Ä–æ–≤\n\n–¢–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:\n',
                             reply_markup=okay_kb)
    elif status == '–°—Ç–∞–Ω–¥–∞—Ä—Ç':
        await message.answer('–¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å - –°–¢–ê–ù–î–ê–†–¢\n\n'
                             f'–¢—ã —É–∂–µ –∑–∞–¥–æ–Ω–∞—Ç–∏–ª {money} —Ä—É–±–ª–µ–π'
                             '–Ω–∞ YY —Å–±–æ—Ä–æ–≤\n\n–¢–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:\n',
                             reply_markup=okay_kb)
    elif status == '–ú–∞–∫—Å':
        await message.answer('–¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å - –ú–ê–ö–°\n\n'
                             f'–¢—ã —É–∂–µ –∑–∞–¥–æ–Ω–∞—Ç–∏–ª {money} —Ä—É–±–ª–µ–π'
                             '–Ω–∞ YY —Å–±–æ—Ä–æ–≤\n\n–¢–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:\n',
                             reply_markup=okay_kb)
